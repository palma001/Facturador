{
    "openapi": "3.0.0",
    "info": {
        "title": "API SUDAMERICA",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000"
        },
        {
            "url": "http://api-facturador.herokuapp.com/"
        }
    ],
    "paths": {
        "/api/attribute-types": {
            "get": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Show attribute types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show attribute types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Creates a new attribute types",
                "description": "Creates a new attribute types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The AttributeType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/attribute-types/{id}": {
            "get": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Get AttributeType information",
                "description": "Returns AttributeType data",
                "operationId": "getAttributeTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Update existing AttributeType",
                "description": "Returns updated AttributeType data",
                "operationId": "updateAttributeType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Delete existing AttributeType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/bill-electronics": {
            "get": {
                "tags": [
                    "BillElectronic"
                ],
                "summary": "Show bill electronics",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "BillElectronic resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BillElectronic resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "BillElectronic resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BillElectronic resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a BillElectronic resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "BillElectronic resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "BillElectronic resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BillElectronic resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show bill electronics all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "BillElectronic"
                ],
                "summary": "Creates a new bill electronics",
                "description": "Creates a new bill electronics",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillElectronic"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The BillElectronic resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/bill-electronics/{id}": {
            "get": {
                "tags": [
                    "BillElectronic"
                ],
                "summary": "Get BillElectronic information",
                "description": "Returns BillElectronic data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BillElectronic id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillElectronic"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BillElectronic"
                ],
                "summary": "Delete existing BillElectronic",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BillElectronic id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/branch-offices": {
            "get": {
                "tags": [
                    "BranchOffice"
                ],
                "summary": "Show branch offices",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "BranchOffice resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BranchOffice resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "BranchOffice resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BranchOffice resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a BranchOffice resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "BranchOffice resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "BranchOffice resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a BranchOffice resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show branch offices all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "BranchOffice"
                ],
                "summary": "Creates a new branch offices",
                "description": "Creates a new branch offices",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchOffice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The BranchOffice resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/branch-offices/{id}": {
            "get": {
                "tags": [
                    "BranchOffice"
                ],
                "summary": "Get BranchOffice information",
                "description": "Returns BranchOffice data",
                "operationId": "getBranchOfficeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BranchOffice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOffice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "BranchOffice"
                ],
                "summary": "Update existing BranchOffice",
                "description": "Returns updated BranchOffice data",
                "operationId": "updateBranchOffice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BranchOffice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchOffice"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOffice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BranchOffice"
                ],
                "summary": "Delete existing BranchOffice",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BranchOffice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Show brands",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Brand resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show brands all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Creates a new brands",
                "description": "Creates a new brands",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Brand resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get Brand information",
                "description": "Returns Brand data",
                "operationId": "getBrandById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update existing Brand",
                "description": "Returns updated Brand data",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete existing Brand",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show categories",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Category resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show categories all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Creates a new categories",
                "description": "Creates a new categories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Category resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Category information",
                "description": "Returns Category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update existing Category",
                "description": "Returns updated Category data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing Category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Show clients",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a client resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show clients all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Creates a new client",
                "description": "Creates a new client",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The CLient resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get Client information",
                "description": "Returns Client data",
                "operationId": "getClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update existing Client",
                "description": "Returns updated Client data",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Delete existing Client",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/client-types": {
            "get": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Show client types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a ClientType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show client types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Creates a new client types",
                "description": "Creates a new client types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The ClientType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/client-types/{id}": {
            "get": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Get ClientType information",
                "description": "Returns ClientType data",
                "operationId": "getClientTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Update existing ClientType",
                "description": "Returns updated ClientType data",
                "operationId": "updateClientType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Delete existing ClientType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/coins": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Show coins",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Coin resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Coin resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Coin resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Coin resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Coin resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show coins all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Coin"
                ],
                "summary": "Creates a new coins",
                "description": "Creates a new coins",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Coin resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/coins/{id}": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Get Coin information",
                "description": "Returns Coin data",
                "operationId": "getCoinById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Coin"
                ],
                "summary": "Update existing Coin",
                "description": "Returns updated Coin data",
                "operationId": "updateCoin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coin"
                ],
                "summary": "Delete existing Coin",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/document-types": {
            "get": {
                "tags": [
                    "DocumentType"
                ],
                "summary": "Show document types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "DocumentType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a DocumentType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "DocumentType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a DocumentType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a DocumentType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "DocumentType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "DocumentType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a DocumentType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show document types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "DocumentType"
                ],
                "summary": "Creates a new document types",
                "description": "Creates a new document types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The DocumentType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/document-types/{id}": {
            "get": {
                "tags": [
                    "DocumentType"
                ],
                "summary": "Get DocumentType information",
                "description": "Returns DocumentType data",
                "operationId": "getDocumentTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "DocumentType"
                ],
                "summary": "Update existing DocumentType",
                "description": "Returns updated DocumentType data",
                "operationId": "updateDocumentType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "DocumentType"
                ],
                "summary": "Delete existing DocumentType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DocumentType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/guides": {
            "get": {
                "tags": [
                    "Guide"
                ],
                "summary": "Show guide",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Guide resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Guide resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Guide resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Guide resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Guide resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Guide resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Guide resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Guide resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show guide all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Guide"
                ],
                "summary": "Creates a new guide",
                "description": "Creates a new guide",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Guide"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Guide resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/guides/{id}": {
            "get": {
                "tags": [
                    "Guide"
                ],
                "summary": "Get Guide information",
                "description": "Returns Guide data",
                "operationId": "getGuideById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Guide"
                ],
                "summary": "Update existing Guide",
                "description": "Returns updated Guide data",
                "operationId": "updateGuide",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Guide"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guide"
                ],
                "summary": "Delete existing Guide",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/authentication/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authentication",
                "operationId": "Authentication",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/authentication/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "RefreshToken",
                "operationId": "RefreshToken",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/operation-types": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Show operation types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "OperationType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a OperationType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "OperationType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a OperationType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a OperationType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "OperationType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "OperationType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a OperationType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show operation types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Creates a new operation types",
                "description": "Creates a new operation types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The OperationType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/operation-types/{id}": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Get OperationType information",
                "description": "Returns OperationType data",
                "operationId": "getOperationTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Update existing OperationType",
                "description": "Returns updated OperationType data",
                "operationId": "updateOperationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Delete existing OperationType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/payment-destinations": {
            "get": {
                "tags": [
                    "PaymentDestination"
                ],
                "summary": "Show payment destinations",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "PaymentDestination resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentDestination resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "PaymentDestination resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentDestination resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a PaymentDestination resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "PaymentDestination resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "PaymentDestination resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentDestination resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show payment destinations all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "PaymentDestination"
                ],
                "summary": "Creates a new payment destinations",
                "description": "Creates a new payment destinations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDestination"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The PaymentDestination resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/payment-destinations/{id}": {
            "get": {
                "tags": [
                    "PaymentDestination"
                ],
                "summary": "Get PaymentDestination information",
                "description": "Returns PaymentDestination data",
                "operationId": "getPaymentDestinationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentDestination id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDestination"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "PaymentDestination"
                ],
                "summary": "Update existing PaymentDestination",
                "description": "Returns updated PaymentDestination data",
                "operationId": "updatePaymentDestination",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentDestination id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDestination"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDestination"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PaymentDestination"
                ],
                "summary": "Delete existing PaymentDestination",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentDestination id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/payment-methods": {
            "get": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Show payment methods",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "PaymentMethod resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentMethod resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "PaymentMethod resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentMethod resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a PaymentMethod resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "PaymentMethod resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "PaymentMethod resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a PaymentMethod resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show payment methods all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Creates a new payment methods",
                "description": "Creates a new payment methods",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethod"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The PaymentMethod resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/payment-methods/{id}": {
            "get": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Get PaymentMethod information",
                "description": "Returns PaymentMethod data",
                "operationId": "getPaymentMethodById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentMethod id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Update existing PaymentMethod",
                "description": "Returns updated PaymentMethod data",
                "operationId": "updatePaymentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentMethod id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethod"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Delete existing PaymentMethod",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PaymentMethod id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Show products",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a product resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Products all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Creates a new product",
                "description": "Creates a new product",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Product resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Product information",
                "description": "Returns Product data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update existing Product",
                "description": "Returns updated Product data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete existing Product",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/providers": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Show providers",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Provider resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Provider resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Provider resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Provider resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Provider resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Provider resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Provider resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Provider resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show providers all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Provider"
                ],
                "summary": "Creates a new Provider",
                "description": "Creates a new Provider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/providers/{id}": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Get Provider information",
                "description": "Returns Provider data",
                "operationId": "getProviderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Provider"
                ],
                "summary": "Update existing Provider",
                "description": "Returns updated Provider data",
                "operationId": "updateProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "summary": "Delete existing Provider",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/quotations": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Show bill electronics",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Quotation resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Quotation resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Quotation resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Quotation resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Quotation resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Quotation resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Quotation resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Quotation resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show bill electronics all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Creates a new bill electronics",
                "description": "Creates a new bill electronics",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Quotation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Quotation resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/quotations/{id}": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get Quotation information",
                "description": "Returns Quotation data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quotation id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Quotation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Delete existing Quotation",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quotation id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Show roles",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show roles all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Creates a new user",
                "description": "Creates a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Role resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get Role information",
                "description": "Returns Role data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update existing Role",
                "description": "Returns updated Role data",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete existing Role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/sellers": {
            "get": {
                "tags": [
                    "Seller"
                ],
                "summary": "Show sellers",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Seller resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Seller resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Seller resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Seller resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Seller resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Seller resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Seller resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Seller resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show sellers all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Seller"
                ],
                "summary": "Creates a new Seller",
                "description": "Creates a new Seller",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Seller"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Seller resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/sellers/{id}": {
            "get": {
                "tags": [
                    "Seller"
                ],
                "summary": "Get Seller information",
                "description": "Returns Seller data",
                "operationId": "getSellerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Seller"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Seller"
                ],
                "summary": "Update existing Seller",
                "description": "Returns updated Seller data",
                "operationId": "updateSeller",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Seller"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Seller"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Seller"
                ],
                "summary": "Delete existing Seller",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSeller",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/series": {
            "get": {
                "tags": [
                    "Serie"
                ],
                "summary": "Show series",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Serie resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Serie resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Serie resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Serie resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Serie resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Serie resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Serie resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Serie resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show series all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Serie"
                ],
                "summary": "Creates a new series",
                "description": "Creates a new series",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serie"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Serie resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/series/{id}": {
            "get": {
                "tags": [
                    "Serie"
                ],
                "summary": "Get Serie information",
                "description": "Returns Serie data",
                "operationId": "getSerieById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Serie id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serie"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Serie"
                ],
                "summary": "Update existing Serie",
                "description": "Returns updated Serie data",
                "operationId": "updateSerie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Serie id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serie"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serie"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Serie"
                ],
                "summary": "Delete existing Serie",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Serie id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/type-of-credit-notes": {
            "get": {
                "tags": [
                    "TypeOfCreditNote"
                ],
                "summary": "Show type of credit notes",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "TypeOfCreditNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a TypeOfCreditNote resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "TypeOfCreditNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a TypeOfCreditNote resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a TypeOfCreditNote resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "TypeOfCreditNote resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "TypeOfCreditNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a TypeOfCreditNote resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show type of credit notes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "TypeOfCreditNote"
                ],
                "summary": "Creates a new type of credit notes",
                "description": "Creates a new type of credit notes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeOfCreditNote"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The TypeOfCreditNote resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/type-of-credit-notes/{id}": {
            "get": {
                "tags": [
                    "TypeOfCreditNote"
                ],
                "summary": "Get TypeOfCreditNote information",
                "description": "Returns TypeOfCreditNote data",
                "operationId": "getTypeOfCreditNoteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TypeOfCreditNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeOfCreditNote"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "TypeOfCreditNote"
                ],
                "summary": "Update existing TypeOfCreditNote",
                "description": "Returns updated TypeOfCreditNote data",
                "operationId": "updateTypeOfCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TypeOfCreditNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeOfCreditNote"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeOfCreditNote"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TypeOfCreditNote"
                ],
                "summary": "Delete existing TypeOfCreditNote",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TypeOfCreditNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show users",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show user all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates a new user",
                "description": "Creates a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The User resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User information",
                "description": "Returns User data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing User",
                "description": "Returns updated User data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing User",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/voucher-types": {
            "get": {
                "tags": [
                    "VoucherType"
                ],
                "summary": "Show attribute types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "VoucherType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "VoucherType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a VoucherType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "VoucherType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "VoucherType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show attribute types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "VoucherType"
                ],
                "summary": "Creates a new attribute types",
                "description": "Creates a new attribute types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoucherType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The VoucherType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/voucher-types/{id}": {
            "get": {
                "tags": [
                    "VoucherType"
                ],
                "summary": "Get VoucherType information",
                "description": "Returns VoucherType data",
                "operationId": "getVoucherTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoucherType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "VoucherType"
                ],
                "summary": "Update existing VoucherType",
                "description": "Returns updated VoucherType data",
                "operationId": "updateVoucherType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoucherType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoucherType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "VoucherType"
                ],
                "summary": "Delete existing VoucherType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/voucher-type-notes": {
            "get": {
                "tags": [
                    "VoucherTypeNote"
                ],
                "summary": "Show attribute type notes",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "VoucherTypeNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherTypeNote resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "VoucherTypeNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherTypeNote resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a VoucherTypeNote resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "VoucherTypeNote resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "VoucherTypeNote resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a VoucherTypeNote resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show attribute type notes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "VoucherTypeNote"
                ],
                "summary": "Creates a new attribute type notes",
                "description": "Creates a new attribute type notes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoucherTypeNote"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The VoucherTypeNote resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/voucher-type-notes/{id}": {
            "get": {
                "tags": [
                    "VoucherTypeNote"
                ],
                "summary": "Get VoucherTypeNote information",
                "description": "Returns VoucherTypeNote data",
                "operationId": "getVoucherTypeNoteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherTypeNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoucherTypeNote"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "VoucherTypeNote"
                ],
                "summary": "Update existing VoucherTypeNote",
                "description": "Returns updated VoucherTypeNote data",
                "operationId": "updateVoucherTypeNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherTypeNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoucherTypeNote"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoucherTypeNote"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "VoucherTypeNote"
                ],
                "summary": "Delete existing VoucherTypeNote",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VoucherTypeNote id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AttributeType": {
                "properties": {
                    "name": {
                        "description": "The AttributeType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The AttributeType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "BillElectronic": {
                "properties": {
                    "serie_id": {
                        "description": "The Bill Electronic serie_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "client_id": {
                        "description": "The Bill Electronic client_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "voucher_type_id": {
                        "description": "The Bill Electronic voucher_type_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "branch_office_id": {
                        "description": "The Bill Electronic branch_office_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "operation_type_id": {
                        "description": "The Bill Electronic operation_type_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "seller_id": {
                        "description": "The Bill Electronic seller_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "coin_id": {
                        "description": "The Bill Electronic coin_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "exchange_rate": {
                        "description": "The Bill Electronic exchange_rate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "igv": {
                        "description": "The Bill Electronic igv",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "12"
                    },
                    "expiration_date": {
                        "description": "The Bill Electronic expiration_date",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": "2021-03-27"
                    },
                    "bill_electronic_details": {
                        "description": "The bill electronic details",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "product_id": {
                                    "type": "number"
                                },
                                "amount": {
                                    "type": "number"
                                },
                                "price": {
                                    "type": "number"
                                },
                                "discount": {
                                    "type": "number"
                                },
                                "igv": {
                                    "type": "number"
                                },
                                "purchase_price": {
                                    "type": "number"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "bill_electronic_payments": {
                        "description": "The bill electronic payments",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "payment_method_id": {
                                    "type": "number"
                                },
                                "payment_destination_id": {
                                    "type": "number"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "bill_electronic_guides": {
                        "description": "The bill electronic payments",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "guide_id": {
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "observation": {
                                    "type": "string"
                                },
                                "pucharse_order": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "BranchOffice": {
                "properties": {
                    "name": {
                        "description": "The Branch Office name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The Branch Office Description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Brand": {
                "properties": {
                    "name": {
                        "description": "The Brand name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Brand description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "name": {
                        "description": "The Category name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Category description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Client": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Client password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "full_name_contact": {
                        "description": "The Client full name contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone": {
                        "description": "The Client phone",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone_contact": {
                        "description": "The Client phone contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "client_type_id": {
                        "description": "The Client type",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "document_type_id": {
                        "description": "The document type",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "document_number": {
                        "description": "The document number",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "email": {
                        "description": "The Client email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Client crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Client update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ClientType": {
                "properties": {
                    "name": {
                        "description": "The ClientType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Coin": {
                "properties": {
                    "acronym": {
                        "description": "The Coin acronym",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "The Coin name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "active": {
                        "description": "The Coin active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Symbol": {
                        "description": "The Coin Symbol",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "DocumentType": {
                "properties": {
                    "name": {
                        "description": "The DocumentType",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Guide": {
                "properties": {
                    "name": {
                        "description": "The Guide name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The Guide description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "OperationType": {
                "properties": {
                    "name": {
                        "description": "The Operation Type name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The Operation Type password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "PaymentDestination": {
                "properties": {
                    "name": {
                        "description": "The Payment Destination name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The Payment Destination description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "PaymentMethod": {
                "properties": {
                    "name": {
                        "description": "The Payment Method name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The Payment Method description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "code": {
                        "description": "The Product code",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "The Productname",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Product description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "category_id": {
                        "description": "The Product category",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "brand_id": {
                        "description": "The Product brand",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "attribute_types": {
                        "description": "The Product attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "attribute_type_id": {
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Provider": {
                "properties": {
                    "name": {
                        "description": "The Provider name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Provider last name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "full_name_contact": {
                        "description": "The Provider full name contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone": {
                        "description": "The Provider phone",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone_contact": {
                        "description": "The Provider phone contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "document_type_id": {
                        "description": "The document type",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "document_number": {
                        "description": "The document number",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "email": {
                        "description": "The Provider email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Provider crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Provider update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Quotation": {
                "properties": {
                    "client_id": {
                        "description": "The Quotation client_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "seller_id": {
                        "description": "The Quotation seller_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "coin_id": {
                        "description": "The Quotation coin_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "exchange_rate": {
                        "description": "The Quotation exchange_rate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "igv": {
                        "description": "The Quotation igv",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "12"
                    },
                    "expiration_date": {
                        "description": "The Quotation expiration_date",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "2021-03-27"
                    },
                    "validity_time": {
                        "description": "The Quotation validity time",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "delivery_time": {
                        "description": "The Quotation delivery time",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "The Quotation shipping address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "payment_method_id": {
                        "description": "The Quotation Payment term",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "account_number": {
                        "description": "The Quotation account number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "quotation_details": {
                        "description": "The Quotation details",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "product_id": {
                                    "type": "number"
                                },
                                "amount": {
                                    "type": "number"
                                },
                                "price": {
                                    "type": "number"
                                },
                                "igv": {
                                    "type": "number"
                                },
                                "purchase_price": {
                                    "type": "number"
                                },
                                "extra_attribute": {
                                    "type": "string"
                                },
                                "extra_attribute_description": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "quotation_payments": {
                        "description": "The Quotation payments",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "payment_method_id": {
                                    "type": "number"
                                },
                                "payment_destination_id": {
                                    "type": "number"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "name": {
                        "description": "The Rolename",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "acronym": {
                        "description": "The Role password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Seller": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The seller name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "last_name": {
                                "description": "The seller last_name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "phone": {
                                "description": "The seller phone",
                                "required": [
                                    "false"
                                ],
                                "type": "string"
                            },
                            "document_type_id": {
                                "description": "The document document type",
                                "required": [
                                    "false"
                                ],
                                "type": "number"
                            },
                            "document_number": {
                                "description": "The document number",
                                "required": [
                                    "false"
                                ],
                                "type": "string"
                            },
                            "email": {
                                "description": "The seller email",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "user_created_id": {
                                "description": "The user crete",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            },
                            "user_updated_id": {
                                "description": "The user update",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Serie": {
                "properties": {
                    "name": {
                        "description": "The Serie name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "TypeOfCreditNote": {
                "properties": {
                    "name": {
                        "description": "The TypeOfCreditNote name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The TypeOfCreditNote Description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Users email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "password": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "VoucherType": {
                "properties": {
                    "name": {
                        "description": "The VoucherType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The VoucherType Description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "VoucherTypeNote": {
                "properties": {
                    "name": {
                        "description": "The VoucherTypeNote name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The VoucherTypeNote Description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}