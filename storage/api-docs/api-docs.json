{
    "openapi": "3.0.0",
    "info": {
        "title": "API Facturaci√≥n",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000"
        },
        {
            "url": "http://api-facturador.herokuapp.com/"
        }
    ],
    "paths": {
        "/api/attribute-types": {
            "get": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Show attribute types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "AttributeType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a AttributeType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show attribute types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Creates a new attribute types",
                "description": "Creates a new attribute types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The AttributeType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/attribute-types/{id}": {
            "get": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Get AttributeType information",
                "description": "Returns AttributeType data",
                "operationId": "getAttributeTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Update existing AttributeType",
                "description": "Returns updated AttributeType data",
                "operationId": "updateAttributeType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeType"
                ],
                "summary": "Delete existing AttributeType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AttributeType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Show brands",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Brand resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Brand resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Brand resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show brands all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Creates a new brands",
                "description": "Creates a new brands",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Brand resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get Brand information",
                "description": "Returns Brand data",
                "operationId": "getBrandById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update existing Brand",
                "description": "Returns updated Brand data",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete existing Brand",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show categories",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a Category resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "Category resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a Category resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show categories all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Creates a new categories",
                "description": "Creates a new categories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Category resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Category information",
                "description": "Returns Category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update existing Category",
                "description": "Returns updated Category data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing Category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Show clients",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a client resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "client resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a client resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show clients all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Creates a new client",
                "description": "Creates a new client",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The CLient resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get Client information",
                "description": "Returns Client data",
                "operationId": "getClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update existing Client",
                "description": "Returns updated Client data",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Delete existing Client",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/client-types": {
            "get": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Show client types",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a ClientType resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "ClientType resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a ClientType resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show client types all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Creates a new client types",
                "description": "Creates a new client types",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The ClientType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/client-types/{id}": {
            "get": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Get ClientType information",
                "description": "Returns ClientType data",
                "operationId": "getClientTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Update existing ClientType",
                "description": "Returns updated ClientType data",
                "operationId": "updateClientType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ClientType"
                ],
                "summary": "Delete existing ClientType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ClientType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/authentication/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authentication",
                "operationId": "Authentication",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/authentication/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "RefreshToken",
                "operationId": "RefreshToken",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Show products",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a product resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "product resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a product resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Products all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Creates a new product",
                "description": "Creates a new product",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Product resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Product information",
                "description": "Returns Product data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update existing Product",
                "description": "Returns updated Product data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete existing Product",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Show roles",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show roles all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Creates a new user",
                "description": "Creates a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Role resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get Role information",
                "description": "Returns Role data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update existing Role",
                "description": "Returns updated Role data",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete existing Role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show users",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show user all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates a new user",
                "description": "Creates a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The User resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User information",
                "description": "Returns User data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing User",
                "description": "Returns updated User data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing User",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AttributeType": {
                "properties": {
                    "name": {
                        "description": "The AttributeType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The AttributeType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Brand": {
                "properties": {
                    "name": {
                        "description": "The Brand name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Brand description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "name": {
                        "description": "The Category name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Category description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Client": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Client password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "full_name_contact": {
                        "description": "The Client full name contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone": {
                        "description": "The Client phone",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "phone_contact": {
                        "description": "The Client phone contact",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "client_type_id": {
                        "description": "The Client client type",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "email": {
                        "description": "The Client email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Client crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Client update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ClientType": {
                "properties": {
                    "name": {
                        "description": "The ClientType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "code": {
                        "description": "The Product code",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "The Productname",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Product description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "category_id": {
                        "description": "The Product category",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "brand_id": {
                        "description": "The Product brand",
                        "required": [
                            "false"
                        ],
                        "type": "number"
                    },
                    "attribute_types": {
                        "description": "The Product attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "attribute_type_id": {
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "name": {
                        "description": "The Rolename",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "acronym": {
                        "description": "The Role password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Users email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "password": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}